!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
A	chap3/lex.yy.c	73;"	d	file:
AND	chap2/tokens.h	31;"	d
ARRAY	chap2/tokens.h	34;"	d
ASSIGN	chap2/tokens.h	33;"	d
AS_InstrList	chap9/assem.c	/^AS_instrList AS_InstrList(AS_instr head, AS_instrList tail)$/;"	f
AS_Label	chap9/assem.c	/^AS_instr AS_Label(string a, Temp_label label) {$/;"	f
AS_Move	chap9/assem.c	/^AS_instr AS_Move(string a, Temp_tempList d, Temp_tempList s) {$/;"	f
AS_Oper	chap9/assem.c	/^AS_instr AS_Oper(string a, Temp_tempList d, Temp_tempList s, AS_targets j) {$/;"	f
AS_Proc	chap9/assem.c	/^AS_proc AS_Proc(string p, AS_instrList b, string e)$/;"	f
AS_Targets	chap9/assem.c	/^AS_targets AS_Targets(Temp_labelList labels) {$/;"	f
AS_instr	chap9/assem.h	/^typedef struct AS_instr_ *AS_instr;$/;"	t	typeref:struct:AS_instr_
AS_instrList	chap9/assem.h	/^typedef struct AS_instrList_ *AS_instrList;$/;"	t	typeref:struct:AS_instrList_
AS_instrList_	chap9/assem.h	/^struct AS_instrList_ { AS_instr head; AS_instrList tail;};$/;"	s
AS_instr_	chap9/assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	s
AS_print	chap9/assem.c	/^void AS_print(FILE *out, AS_instr i, Temp_map m)$/;"	f
AS_printInstrList	chap9/assem.c	/^void AS_printInstrList (FILE *out, AS_instrList iList, Temp_map m)$/;"	f
AS_proc	chap9/assem.h	/^typedef struct AS_proc_ *AS_proc;$/;"	t	typeref:struct:AS_proc_
AS_proc_	chap9/assem.h	/^struct AS_proc_ {$/;"	s
AS_splice	chap9/assem.c	/^AS_instrList AS_splice(AS_instrList a, AS_instrList b) {$/;"	f
AS_targets	chap9/assem.h	/^typedef struct {Temp_labelList labels;} *AS_targets;$/;"	t	typeref:struct:__anon1
A_ArrayExp	chap4/absyn.c	/^A_exp A_ArrayExp(A_pos pos, S_symbol typ, A_exp size, A_exp init)$/;"	f
A_ArrayTy	chap4/absyn.c	/^A_ty A_ArrayTy(A_pos pos, S_symbol array)$/;"	f
A_AssignExp	chap4/absyn.c	/^A_exp A_AssignExp(A_pos pos, A_var var, A_exp exp)$/;"	f
A_AssignStm	chap1/slp.c	/^A_stm A_AssignStm(string id, A_exp exp) {$/;"	f
A_BreakExp	chap4/absyn.c	/^A_exp A_BreakExp(A_pos pos)$/;"	f
A_CallExp	chap4/absyn.c	/^A_exp A_CallExp(A_pos pos, S_symbol func, A_expList args)$/;"	f
A_CompoundStm	chap1/slp.c	/^A_stm A_CompoundStm(A_stm stm1, A_stm stm2) {$/;"	f
A_DecList	chap4/absyn.c	/^A_decList A_DecList(A_dec head, A_decList tail)$/;"	f
A_Efield	chap4/absyn.c	/^A_efield A_Efield(S_symbol name, A_exp exp)$/;"	f
A_EfieldList	chap4/absyn.c	/^A_efieldList A_EfieldList(A_efield head, A_efieldList tail)$/;"	f
A_EseqExp	chap1/slp.c	/^A_exp A_EseqExp(A_stm stm, A_exp exp) {$/;"	f
A_ExpList	chap4/absyn.c	/^A_expList A_ExpList(A_exp head, A_expList tail)$/;"	f
A_Field	chap4/absyn.c	/^A_field A_Field(A_pos pos, S_symbol name, S_symbol typ)$/;"	f
A_FieldList	chap4/absyn.c	/^A_fieldList A_FieldList(A_field head, A_fieldList tail)$/;"	f
A_FieldVar	chap4/absyn.c	/^A_var A_FieldVar(A_pos pos, A_var var, S_symbol sym)$/;"	f
A_ForExp	chap4/absyn.c	/^A_exp A_ForExp(A_pos pos, S_symbol var, A_exp lo, A_exp hi, A_exp body)$/;"	f
A_FunctionDec	chap4/absyn.c	/^A_dec A_FunctionDec(A_pos pos, A_fundecList function)$/;"	f
A_Fundec	chap4/absyn.c	/^A_fundec A_Fundec(A_pos pos, S_symbol name, A_fieldList params, S_symbol result,$/;"	f
A_FundecList	chap4/absyn.c	/^A_fundecList A_FundecList(A_fundec head, A_fundecList tail)$/;"	f
A_IdExp	chap1/slp.c	/^A_exp A_IdExp(string id) {$/;"	f
A_IfExp	chap4/absyn.c	/^A_exp A_IfExp(A_pos pos, A_exp test, A_exp then, A_exp elsee)$/;"	f
A_IntExp	chap4/absyn.c	/^A_exp A_IntExp(A_pos pos, int i)$/;"	f
A_LastExpList	chap1/slp.c	/^A_expList A_LastExpList(A_exp last) {$/;"	f
A_LetExp	chap4/absyn.c	/^A_exp A_LetExp(A_pos pos, A_decList decs, A_exp body)$/;"	f
A_NameTy	chap4/absyn.c	/^A_ty A_NameTy(A_pos pos, S_symbol name)$/;"	f
A_Namety	chap4/absyn.c	/^A_namety A_Namety(S_symbol name, A_ty ty)$/;"	f
A_NametyList	chap4/absyn.c	/^A_nametyList A_NametyList(A_namety head, A_nametyList tail)$/;"	f
A_NilExp	chap4/absyn.c	/^A_exp A_NilExp(A_pos pos)$/;"	f
A_NumExp	chap1/slp.c	/^A_exp A_NumExp(int num) {$/;"	f
A_OpExp	chap1/slp.c	/^A_exp A_OpExp(A_exp left, A_binop oper, A_exp right) {$/;"	f
A_OpExp	chap4/absyn.c	/^A_exp A_OpExp(A_pos pos, A_oper oper, A_exp left, A_exp right)$/;"	f
A_PairExpList	chap1/slp.c	/^A_expList A_PairExpList(A_exp head, A_expList tail) {$/;"	f
A_PrintStm	chap1/slp.c	/^A_stm A_PrintStm(A_expList exps) {$/;"	f
A_RecordExp	chap4/absyn.c	/^A_exp A_RecordExp(A_pos pos, S_symbol typ, A_efieldList fields)$/;"	f
A_RecordTy	chap4/absyn.c	/^A_ty A_RecordTy(A_pos pos, A_fieldList record)$/;"	f
A_SeqExp	chap4/absyn.c	/^A_exp A_SeqExp(A_pos pos, A_expList seq)$/;"	f
A_SimpleVar	chap4/absyn.c	/^A_var A_SimpleVar(A_pos pos, S_symbol sym)$/;"	f
A_StringExp	chap4/absyn.c	/^A_exp A_StringExp(A_pos pos, string s)$/;"	f
A_SubscriptVar	chap4/absyn.c	/^A_var A_SubscriptVar(A_pos pos, A_var var, A_exp exp)$/;"	f
A_TypeDec	chap4/absyn.c	/^A_dec A_TypeDec(A_pos pos, A_nametyList type)$/;"	f
A_VarDec	chap4/absyn.c	/^A_dec A_VarDec(A_pos pos, S_symbol var, S_symbol typ, A_exp init)$/;"	f
A_VarExp	chap4/absyn.c	/^A_exp A_VarExp(A_pos pos, A_var var)$/;"	f
A_WhileExp	chap4/absyn.c	/^A_exp A_WhileExp(A_pos pos, A_exp test, A_exp body)$/;"	f
A_arrayExp	chap4/absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon42
A_arrayTy	chap4/absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	e	enum:A_ty_::__anon56
A_assignExp	chap4/absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon42
A_assignStm	chap1/slp.h	/^struct A_stm_ {enum {A_compoundStm, A_assignStm, A_printStm} kind;$/;"	e	enum:A_stm_::__anon22
A_binop	chap1/slp.h	/^typedef enum {A_plus,A_minus,A_times,A_div} A_binop;$/;"	t	typeref:enum:__anon21
A_breakExp	chap4/absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon42
A_callExp	chap4/absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon42
A_compoundStm	chap1/slp.h	/^struct A_stm_ {enum {A_compoundStm, A_assignStm, A_printStm} kind;$/;"	e	enum:A_stm_::__anon22
A_dec	chap4/absyn.h	/^typedef struct A_dec_ *A_dec;$/;"	t	typeref:struct:A_dec_
A_decList	chap4/absyn.h	/^typedef struct A_decList_ *A_decList;$/;"	t	typeref:struct:A_decList_
A_decList_	chap4/absyn.h	/^struct A_decList_ {A_dec head; A_decList tail;};$/;"	s
A_dec_	chap4/absyn.h	/^struct A_dec_ $/;"	s
A_div	chap1/slp.h	/^typedef enum {A_plus,A_minus,A_times,A_div} A_binop;$/;"	e	enum:__anon21
A_divideOp	chap4/absyn.h	/^typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,$/;"	e	enum:__anon37
A_efield	chap4/absyn.h	/^typedef struct A_efield_ *A_efield;$/;"	t	typeref:struct:A_efield_
A_efieldList	chap4/absyn.h	/^typedef struct A_efieldList_ *A_efieldList;$/;"	t	typeref:struct:A_efieldList_
A_efieldList_	chap4/absyn.h	/^struct A_efieldList_ {A_efield head; A_efieldList tail;};$/;"	s
A_efield_	chap4/absyn.h	/^struct A_efield_ {S_symbol name; A_exp exp;};$/;"	s
A_eqOp	chap4/absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon37
A_eseqExp	chap1/slp.h	/^struct A_exp_ {enum {A_idExp, A_numExp, A_opExp, A_eseqExp} kind;$/;"	e	enum:A_exp_::__anon27
A_exp	chap1/slp.h	/^typedef struct A_exp_ *A_exp;$/;"	t	typeref:struct:A_exp_
A_exp	chap4/absyn.h	/^typedef struct A_exp_ *A_exp;$/;"	t	typeref:struct:A_exp_
A_expList	chap1/slp.h	/^typedef struct A_expList_ *A_expList;$/;"	t	typeref:struct:A_expList_
A_expList	chap4/absyn.h	/^typedef struct A_expList_ *A_expList;$/;"	t	typeref:struct:A_expList_
A_expList_	chap1/slp.h	/^struct A_expList_ {enum {A_pairExpList, A_lastExpList} kind;$/;"	s
A_expList_	chap4/absyn.h	/^struct A_expList_ {A_exp head; A_expList tail;};$/;"	s
A_exp_	chap1/slp.h	/^struct A_exp_ {enum {A_idExp, A_numExp, A_opExp, A_eseqExp} kind;$/;"	s
A_exp_	chap4/absyn.h	/^struct A_exp_$/;"	s
A_field	chap4/absyn.h	/^typedef struct A_field_ *A_field;$/;"	t	typeref:struct:A_field_
A_fieldList	chap4/absyn.h	/^typedef struct A_fieldList_ *A_fieldList;$/;"	t	typeref:struct:A_fieldList_
A_fieldList_	chap4/absyn.h	/^struct A_fieldList_ {A_field head; A_fieldList tail;};$/;"	s
A_fieldVar	chap4/absyn.h	/^       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;$/;"	e	enum:A_var_::__anon38
A_field_	chap4/absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	s
A_forExp	chap4/absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon42
A_functionDec	chap4/absyn.h	/^    {enum {A_functionDec, A_varDec, A_typeDec} kind;$/;"	e	enum:A_dec_::__anon53
A_fundec	chap4/absyn.h	/^typedef struct A_fundec_ *A_fundec;$/;"	t	typeref:struct:A_fundec_
A_fundecList	chap4/absyn.h	/^typedef struct A_fundecList_ *A_fundecList;$/;"	t	typeref:struct:A_fundecList_
A_fundecList_	chap4/absyn.h	/^struct A_fundecList_ {A_fundec head; A_fundecList tail;};$/;"	s
A_fundec_	chap4/absyn.h	/^struct A_fundec_ {A_pos pos;$/;"	s
A_geOp	chap4/absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon37
A_gtOp	chap4/absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon37
A_idExp	chap1/slp.h	/^struct A_exp_ {enum {A_idExp, A_numExp, A_opExp, A_eseqExp} kind;$/;"	e	enum:A_exp_::__anon27
A_ifExp	chap4/absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon42
A_intExp	chap4/absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon42
A_lastExpList	chap1/slp.h	/^struct A_expList_ {enum {A_pairExpList, A_lastExpList} kind;$/;"	e	enum:A_expList_::__anon31
A_leOp	chap4/absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon37
A_letExp	chap4/absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon42
A_ltOp	chap4/absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon37
A_minus	chap1/slp.h	/^typedef enum {A_plus,A_minus,A_times,A_div} A_binop;$/;"	e	enum:__anon21
A_minusOp	chap4/absyn.h	/^typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,$/;"	e	enum:__anon37
A_nameTy	chap4/absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	e	enum:A_ty_::__anon56
A_namety	chap4/absyn.h	/^typedef struct A_namety_ *A_namety;$/;"	t	typeref:struct:A_namety_
A_nametyList	chap4/absyn.h	/^typedef struct A_nametyList_ *A_nametyList;$/;"	t	typeref:struct:A_nametyList_
A_nametyList_	chap4/absyn.h	/^struct A_nametyList_ {A_namety head; A_nametyList tail;};$/;"	s
A_namety_	chap4/absyn.h	/^struct A_namety_ {S_symbol name; A_ty ty;};$/;"	s
A_neqOp	chap4/absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	e	enum:__anon37
A_nilExp	chap4/absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon42
A_numExp	chap1/slp.h	/^struct A_exp_ {enum {A_idExp, A_numExp, A_opExp, A_eseqExp} kind;$/;"	e	enum:A_exp_::__anon27
A_opExp	chap1/slp.h	/^struct A_exp_ {enum {A_idExp, A_numExp, A_opExp, A_eseqExp} kind;$/;"	e	enum:A_exp_::__anon27
A_opExp	chap4/absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon42
A_oper	chap4/absyn.h	/^	     A_eqOp, A_neqOp, A_ltOp, A_leOp, A_gtOp, A_geOp} A_oper;$/;"	t	typeref:enum:__anon37
A_pairExpList	chap1/slp.h	/^struct A_expList_ {enum {A_pairExpList, A_lastExpList} kind;$/;"	e	enum:A_expList_::__anon31
A_plus	chap1/slp.h	/^typedef enum {A_plus,A_minus,A_times,A_div} A_binop;$/;"	e	enum:__anon21
A_plusOp	chap4/absyn.h	/^typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,$/;"	e	enum:__anon37
A_pos	chap4/absyn.h	/^typedef int A_pos;$/;"	t
A_printStm	chap1/slp.h	/^struct A_stm_ {enum {A_compoundStm, A_assignStm, A_printStm} kind;$/;"	e	enum:A_stm_::__anon22
A_recordExp	chap4/absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon42
A_recordTy	chap4/absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	e	enum:A_ty_::__anon56
A_seqExp	chap4/absyn.h	/^	       A_opExp, A_recordExp, A_seqExp, A_assignExp, A_ifExp,$/;"	e	enum:A_exp_::__anon42
A_simpleVar	chap4/absyn.h	/^       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;$/;"	e	enum:A_var_::__anon38
A_stm	chap1/slp.h	/^typedef struct A_stm_ *A_stm;$/;"	t	typeref:struct:A_stm_
A_stm_	chap1/slp.h	/^struct A_stm_ {enum {A_compoundStm, A_assignStm, A_printStm} kind;$/;"	s
A_stringExp	chap4/absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon42
A_subscriptVar	chap4/absyn.h	/^       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;$/;"	e	enum:A_var_::__anon38
A_times	chap1/slp.h	/^typedef enum {A_plus,A_minus,A_times,A_div} A_binop;$/;"	e	enum:__anon21
A_timesOp	chap4/absyn.h	/^typedef enum {A_plusOp, A_minusOp, A_timesOp, A_divideOp,$/;"	e	enum:__anon37
A_ty	chap4/absyn.h	/^typedef struct A_ty_ *A_ty;$/;"	t	typeref:struct:A_ty_
A_ty_	chap4/absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	s
A_typeDec	chap4/absyn.h	/^    {enum {A_functionDec, A_varDec, A_typeDec} kind;$/;"	e	enum:A_dec_::__anon53
A_var	chap4/absyn.h	/^typedef struct A_var_ *A_var;$/;"	t	typeref:struct:A_var_
A_varDec	chap4/absyn.h	/^    {enum {A_functionDec, A_varDec, A_typeDec} kind;$/;"	e	enum:A_dec_::__anon53
A_varExp	chap4/absyn.h	/^      {enum {A_varExp, A_nilExp, A_intExp, A_stringExp, A_callExp,$/;"	e	enum:A_exp_::__anon42
A_var_	chap4/absyn.h	/^struct A_var_$/;"	s
A_whileExp	chap4/absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	e	enum:A_exp_::__anon42
BEGIN	chap3/lex.yy.c	4;"	d	file:
BINOP	chap7/tree.h	/^	      union {struct {T_binOp op; T_exp left, right;} BINOP;$/;"	m	union:T_exp_::__anon16	typeref:struct:T_exp_::__anon16::__anon17
BREAK	chap2/tokens.h	46;"	d
Binder	chap4/table.c	/^static binder Binder(void *key, void *value, binder next, void *prevtop)$/;"	f	file:
CALL	chap7/tree.h	/^		     struct {T_exp fun; T_expList args;} CALL;$/;"	m	union:T_exp_::__anon16	typeref:struct:T_exp_::__anon16::__anon19
CJUMP	chap7/tree.h	/^			      Temp_label true, false;} CJUMP;$/;"	m	union:T_stm_::__anon10	typeref:struct:T_stm_::__anon10::__anon13
COLON	chap2/tokens.h	12;"	d
COL_result	chap11/color.h	/^struct COL_result {Temp_map coloring; Temp_tempList spills;};$/;"	s
COMMA	chap2/tokens.h	11;"	d
CONST	chap7/tree.h	/^		     int CONST;$/;"	m	union:T_exp_::__anon16
C_basicBlocks	chap8/canon.c	/^struct C_block C_basicBlocks(T_stmList stmList)$/;"	f
C_basicBlocks	chap9/canon.c	/^struct C_block C_basicBlocks(T_stmList stmList)$/;"	f
C_block	chap8/canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	s
C_block	chap9/canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	s
C_linearize	chap8/canon.c	/^T_stmList C_linearize(T_stm stm)$/;"	f
C_linearize	chap9/canon.c	/^T_stmList C_linearize(T_stm stm)$/;"	f
C_stmListList	chap8/canon.h	/^typedef struct C_stmListList_ *C_stmListList;$/;"	t	typeref:struct:C_stmListList_
C_stmListList	chap9/canon.h	/^typedef struct C_stmListList_ *C_stmListList;$/;"	t	typeref:struct:C_stmListList_
C_stmListList_	chap8/canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	s
C_stmListList_	chap9/canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	s
C_traceSchedule	chap8/canon.c	/^T_stmList C_traceSchedule(struct C_block b)$/;"	f
C_traceSchedule	chap9/canon.c	/^T_stmList C_traceSchedule(struct C_block b)$/;"	f
DIVIDE	chap2/tokens.h	24;"	d
DO	chap2/tokens.h	41;"	d
DOT	chap2/tokens.h	20;"	d
ECHO	chap3/lex.yy.c	14;"	d	file:
ELSE	chap2/tokens.h	37;"	d
EM_error	chap2/errormsg.c	/^void EM_error(int pos, char *message,...)$/;"	f
EM_error	chap3/errormsg.c	/^void EM_error(int pos, char *message,...)$/;"	f
EM_newline	chap2/errormsg.c	/^void EM_newline(void)$/;"	f
EM_newline	chap3/errormsg.c	/^void EM_newline(void)$/;"	f
EM_reset	chap2/errormsg.c	/^void EM_reset(string fname)$/;"	f
EM_reset	chap3/errormsg.c	/^void EM_reset(string fname)$/;"	f
EM_tokPos	chap2/errormsg.c	/^int EM_tokPos=0;$/;"	v
EM_tokPos	chap3/errormsg.c	/^int EM_tokPos=0;$/;"	v
END	chap2/tokens.h	44;"	d
EQ	chap2/tokens.h	25;"	d
ESEQ	chap7/tree.h	/^		     struct {T_stm stm; T_exp exp;} ESEQ;$/;"	m	union:T_exp_::__anon16	typeref:struct:T_exp_::__anon16::__anon18
EXP	chap7/tree.h	/^		      T_exp EXP;$/;"	m	union:T_stm_::__anon10
ExpRefList	chap8/canon.c	/^static expRefList ExpRefList(T_exp *head, expRefList tail)$/;"	f	file:
ExpRefList	chap9/canon.c	/^static expRefList ExpRefList(T_exp *head, expRefList tail)$/;"	f	file:
F	chap3/lex.yy.c	75;"	d	file:
FALSE	chap1/util.h	7;"	d
FALSE	chap2/util.h	7;"	d
FALSE	chap3/util.h	7;"	d
FOR	chap2/tokens.h	39;"	d
FUNCTION	chap2/tokens.h	48;"	d
GE	chap2/tokens.h	30;"	d
GT	chap2/tokens.h	29;"	d
G_Graph	chap10/graph.c	/^G_graph G_Graph(void)$/;"	f
G_Node	chap10/graph.c	/^G_node G_Node(G_graph g, void *info)$/;"	f
G_NodeList	chap10/graph.c	/^G_nodeList G_NodeList(G_node head, G_nodeList tail)$/;"	f
G_addEdge	chap10/graph.c	/^void G_addEdge(G_node from, G_node to) {$/;"	f
G_adj	chap10/graph.c	/^G_nodeList G_adj(G_node n) {return cat(G_succ(n), G_pred(n));}$/;"	f
G_degree	chap10/graph.c	/^int G_degree(G_node n) {return inDegree(n)+outDegree(n);}$/;"	f
G_empty	chap10/graph.c	/^G_table G_empty(void) {$/;"	f
G_enter	chap10/graph.c	/^void G_enter(G_table t, G_node node, void *value)$/;"	f
G_goesTo	chap10/graph.c	/^bool G_goesTo(G_node from, G_node n) {$/;"	f
G_graph	chap10/graph.h	/^typedef struct G_graph_ *G_graph;  \/* The "graph" type *\/$/;"	t	typeref:struct:G_graph_
G_graph_	chap10/graph.c	/^struct G_graph_ {int nodecount;$/;"	s	file:
G_inNodeList	chap10/graph.c	/^bool G_inNodeList(G_node a, G_nodeList l) {$/;"	f
G_look	chap10/graph.c	/^void *G_look(G_table t, G_node node)$/;"	f
G_node	chap10/graph.h	/^typedef struct G_node_ *G_node;    \/* The "node" type *\/$/;"	t	typeref:struct:G_node_
G_nodeInfo	chap10/graph.c	/^void *G_nodeInfo(G_node n) {return n->info;}$/;"	f
G_nodeList	chap10/graph.h	/^typedef struct G_nodeList_ *G_nodeList;$/;"	t	typeref:struct:G_nodeList_
G_nodeList_	chap10/graph.h	/^struct G_nodeList_ { G_node head; G_nodeList tail;};$/;"	s
G_node_	chap10/graph.c	/^struct G_node_ {$/;"	s	file:
G_nodes	chap10/graph.c	/^G_nodeList G_nodes(G_graph g)$/;"	f
G_pred	chap10/graph.c	/^G_nodeList G_pred(G_node n) { assert(n); return n->preds; }$/;"	f
G_rmEdge	chap10/graph.c	/^void G_rmEdge(G_node from, G_node to) {$/;"	f
G_show	chap10/graph.c	/^void G_show(FILE *out, G_nodeList p, void showInfo(void *)) {$/;"	f
G_succ	chap10/graph.c	/^G_nodeList G_succ(G_node n) { assert(n); return n->succs; }$/;"	f
G_table	chap10/graph.h	/^typedef struct TAB_table_  *G_table;$/;"	t	typeref:struct:TAB_table_
ID	chap2/tokens.h	8;"	d
IF	chap2/tokens.h	35;"	d
IN	chap2/tokens.h	43;"	d
INITIAL	chap3/lex.yy.c	5;"	d	file:
INT	chap2/tokens.h	10;"	d
I_LABEL	chap9/assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	e	enum:AS_instr_::__anon2
I_MOVE	chap9/assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	e	enum:AS_instr_::__anon2
I_OPER	chap9/assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	e	enum:AS_instr_::__anon2
IntList	chap2/errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	t	typeref:struct:intList	file:
IntList	chap3/errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	t	typeref:struct:intList	file:
JUMP	chap7/tree.h	/^		      struct {T_exp exp; Temp_labelList jumps;} JUMP;$/;"	m	union:T_stm_::__anon10	typeref:struct:T_stm_::__anon10::__anon12
LABEL	chap7/tree.h	/^		      Temp_label LABEL;$/;"	m	union:T_stm_::__anon10
LABEL	chap9/assem.h	/^		      struct {string assem; Temp_label label;} LABEL;$/;"	m	union:AS_instr_::__anon3	typeref:struct:AS_instr_::__anon3::__anon5
LBRACE	chap2/tokens.h	18;"	d
LBRACK	chap2/tokens.h	16;"	d
LE	chap2/tokens.h	28;"	d
LET	chap2/tokens.h	42;"	d
LPAREN	chap2/tokens.h	14;"	d
LT	chap2/tokens.h	27;"	d
MEM	chap7/tree.h	/^		     T_exp MEM;$/;"	m	union:T_exp_::__anon16
MINUS	chap2/tokens.h	22;"	d
MOVE	chap7/tree.h	/^		      struct {T_exp dst, src;} MOVE;$/;"	m	union:T_stm_::__anon10	typeref:struct:T_stm_::__anon10::__anon14
MOVE	chap9/assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	union:AS_instr_::__anon3	typeref:struct:AS_instr_::__anon3::__anon6
NAME	chap7/tree.h	/^		     Temp_label NAME;$/;"	m	union:T_exp_::__anon16
NEQ	chap2/tokens.h	26;"	d
NIL	chap2/tokens.h	47;"	d
NLSTATE	chap3/lex.yy.c	1074;"	d	file:
NLSTATE	chap3/lex.yy.c	3;"	d	file:
OF	chap2/tokens.h	45;"	d
OPER	chap9/assem.h	/^			      AS_targets jumps;} OPER;$/;"	m	union:AS_instr_::__anon3	typeref:struct:AS_instr_::__anon3::__anon4
OR	chap2/tokens.h	32;"	d
PLUS	chap2/tokens.h	21;"	d
RA_result	chap11/regalloc.h	/^struct RA_result {Temp_map coloring; AS_instrList il;};$/;"	s
RBRACE	chap2/tokens.h	19;"	d
RBRACK	chap2/tokens.h	17;"	d
REJECT	chap3/lex.yy.c	15;"	d	file:
RPAREN	chap2/tokens.h	15;"	d
S	chap3/lex.yy.c	74;"	d	file:
SEMICOLON	chap2/tokens.h	13;"	d
SEQ	chap7/tree.h	/^	       union {struct {T_stm left, right;} SEQ;$/;"	m	union:T_stm_::__anon10	typeref:struct:T_stm_::__anon10::__anon11
SIZE	chap4/symbol.c	15;"	d	file:
STRING	chap2/tokens.h	9;"	d
STRINGMAX	chap3/lex.yy.c	38;"	d	file:
S_Symbol	chap4/symbol.c	/^S_symbol S_Symbol(string name)$/;"	f
S_beginScope	chap4/symbol.c	/^void S_beginScope(S_table t)$/;"	f
S_dump	chap4/symbol.c	/^void S_dump(S_table t, void (*show)(S_symbol sym, void *binding)) {$/;"	f
S_empty	chap4/symbol.c	/^S_table S_empty(void) $/;"	f
S_endScope	chap4/symbol.c	/^void S_endScope(S_table t)$/;"	f
S_enter	chap4/symbol.c	/^void S_enter(S_table t, S_symbol sym, void *value) {$/;"	f
S_look	chap4/symbol.c	/^void *S_look(S_table t, S_symbol sym) {$/;"	f
S_name	chap4/symbol.c	/^string S_name(S_symbol sym)$/;"	f
S_symbol	chap4/symbol.h	/^typedef struct S_symbol_ *S_symbol;$/;"	t	typeref:struct:S_symbol_
S_symbol_	chap4/symbol.c	/^struct S_symbol_ {string name; S_symbol next;};$/;"	s	file:
S_table	chap4/symbol.h	/^typedef struct TAB_table_ *S_table;$/;"	t	typeref:struct:TAB_table_
StmExp	chap8/canon.c	/^static struct stmExp StmExp(T_stm stm, T_exp exp) {$/;"	f	file:
StmExp	chap9/canon.c	/^static struct stmExp StmExp(T_stm stm, T_exp exp) {$/;"	f	file:
StmListList	chap8/canon.c	/^static C_stmListList StmListList(T_stmList head, C_stmListList tail)$/;"	f	file:
StmListList	chap9/canon.c	/^static C_stmListList StmListList(T_stmList head, C_stmListList tail)$/;"	f	file:
String	chap1/util.c	/^string String(char *s)$/;"	f
String	chap2/util.c	/^string String(char *s)$/;"	f
String	chap3/util.c	/^string String(char *s)$/;"	f
TABSIZE	chap4/table.c	10;"	d	file:
TAB_dump	chap4/table.c	/^void TAB_dump(TAB_table t, void (*show)(void *key, void *value)) {$/;"	f
TAB_empty	chap4/table.c	/^TAB_table TAB_empty(void)$/;"	f
TAB_enter	chap4/table.c	/^void TAB_enter(TAB_table t, void *key, void *value)$/;"	f
TAB_look	chap4/table.c	/^void *TAB_look(TAB_table t, void *key)$/;"	f
TAB_pop	chap4/table.c	/^void *TAB_pop(TAB_table t) {$/;"	f
TAB_table	chap4/table.h	/^typedef struct TAB_table_ *TAB_table;$/;"	t	typeref:struct:TAB_table_
TAB_table_	chap4/table.c	/^struct TAB_table_ {$/;"	s	file:
TEMP	chap7/tree.h	/^		     Temp_temp TEMP;$/;"	m	union:T_exp_::__anon16
THEN	chap2/tokens.h	36;"	d
TIMES	chap2/tokens.h	23;"	d
TO	chap2/tokens.h	40;"	d
TRUE	chap1/util.h	6;"	d
TRUE	chap2/util.h	6;"	d
TRUE	chap3/util.h	6;"	d
TYPE	chap2/tokens.h	50;"	d
T_BINOP	chap7/tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon15
T_Binop	chap7/tree.c	/^T_exp T_Binop(T_binOp op, T_exp left, T_exp right)$/;"	f
T_CALL	chap7/tree.h	/^		      T_CONST, T_CALL} kind;$/;"	e	enum:T_exp_::__anon15
T_CJUMP	chap7/tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon9
T_CONST	chap7/tree.h	/^		      T_CONST, T_CALL} kind;$/;"	e	enum:T_exp_::__anon15
T_Call	chap7/tree.c	/^T_exp T_Call(T_exp fun, T_expList args)$/;"	f
T_Cjump	chap7/tree.c	/^T_stm T_Cjump(T_relOp op, T_exp left, T_exp right, $/;"	f
T_Const	chap7/tree.c	/^T_exp T_Const(int consti)$/;"	f
T_ESEQ	chap7/tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon15
T_EXP	chap7/tree.h	/^		       T_EXP} kind;$/;"	e	enum:T_stm_::__anon9
T_Eseq	chap7/tree.c	/^T_exp T_Eseq(T_stm stm, T_exp exp)$/;"	f
T_Exp	chap7/tree.c	/^T_stm T_Exp(T_exp exp)$/;"	f
T_ExpList	chap7/tree.c	/^T_expList T_ExpList(T_exp head, T_expList tail)$/;"	f
T_JUMP	chap7/tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon9
T_Jump	chap7/tree.c	/^T_stm T_Jump(T_exp exp, Temp_labelList labels)$/;"	f
T_LABEL	chap7/tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon9
T_Label	chap7/tree.c	/^T_stm T_Label(Temp_label label)$/;"	f
T_MEM	chap7/tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon15
T_MOVE	chap7/tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon9
T_Mem	chap7/tree.c	/^T_exp T_Mem(T_exp exp)$/;"	f
T_Move	chap7/tree.c	/^T_stm T_Move(T_exp dst, T_exp src)$/;"	f
T_NAME	chap7/tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon15
T_Name	chap7/tree.c	/^T_exp T_Name(Temp_label name)$/;"	f
T_SEQ	chap7/tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	e	enum:T_stm_::__anon9
T_Seq	chap7/tree.c	/^T_stm T_Seq(T_stm left, T_stm right)$/;"	f
T_StmList	chap7/tree.c	/^T_stmList T_StmList(T_stm head, T_stmList tail)$/;"	f
T_TEMP	chap7/tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	e	enum:T_exp_::__anon15
T_Temp	chap7/tree.c	/^T_exp T_Temp(Temp_temp temp)$/;"	f
T_and	chap7/tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon7
T_arshift	chap7/tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon7
T_binOp	chap7/tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	t	typeref:enum:__anon7
T_commute	chap7/tree.c	/^T_relOp T_commute(T_relOp r)$/;"	f
T_div	chap7/tree.h	/^typedef enum {T_plus, T_minus, T_mul, T_div,$/;"	e	enum:__anon7
T_eq	chap7/tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon8
T_exp	chap7/tree.h	/^typedef struct T_exp_ *T_exp;$/;"	t	typeref:struct:T_exp_
T_expList	chap7/tree.h	/^typedef struct T_expList_ *T_expList;$/;"	t	typeref:struct:T_expList_
T_expList_	chap7/tree.h	/^struct T_expList_ {T_exp head; T_expList tail;};$/;"	s
T_exp_	chap7/tree.h	/^struct T_exp_ {enum {T_BINOP, T_MEM, T_TEMP, T_ESEQ, T_NAME,$/;"	s
T_ge	chap7/tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon8
T_gt	chap7/tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon8
T_le	chap7/tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon8
T_lshift	chap7/tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon7
T_lt	chap7/tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon8
T_minus	chap7/tree.h	/^typedef enum {T_plus, T_minus, T_mul, T_div,$/;"	e	enum:__anon7
T_mul	chap7/tree.h	/^typedef enum {T_plus, T_minus, T_mul, T_div,$/;"	e	enum:__anon7
T_ne	chap7/tree.h	/^typedef enum  {T_eq, T_ne, T_lt, T_gt, T_le, T_ge,$/;"	e	enum:__anon8
T_notRel	chap7/tree.c	/^T_relOp T_notRel(T_relOp r)$/;"	f
T_or	chap7/tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon7
T_plus	chap7/tree.h	/^typedef enum {T_plus, T_minus, T_mul, T_div,$/;"	e	enum:__anon7
T_relOp	chap7/tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	t	typeref:enum:__anon8
T_rshift	chap7/tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon7
T_stm	chap7/tree.h	/^typedef struct T_stm_ *T_stm;$/;"	t	typeref:struct:T_stm_
T_stmList	chap7/tree.h	/^typedef struct T_stmList_ *T_stmList;$/;"	t	typeref:struct:T_stmList_
T_stmList_	chap7/tree.h	/^struct T_stmList_ {T_stm head; T_stmList tail;};$/;"	s
T_stm_	chap7/tree.h	/^struct T_stm_ {enum {T_SEQ, T_LABEL, T_JUMP, T_CJUMP, T_MOVE,$/;"	s
T_uge	chap7/tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	e	enum:__anon8
T_ugt	chap7/tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	e	enum:__anon8
T_ule	chap7/tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	e	enum:__anon8
T_ult	chap7/tree.h	/^		T_ult, T_ule, T_ugt, T_uge} T_relOp;$/;"	e	enum:__anon8
T_xor	chap7/tree.h	/^	      T_and, T_or, T_lshift, T_rshift, T_arshift, T_xor} T_binOp ;$/;"	e	enum:__anon7
Temp_LabelList	chap6/temp.c	/^Temp_labelList Temp_LabelList(Temp_label h, Temp_labelList t)$/;"	f
Temp_TempList	chap6/temp.c	/^Temp_tempList Temp_TempList(Temp_temp h, Temp_tempList t) $/;"	f
Temp_dumpMap	chap6/temp.c	/^void Temp_dumpMap(FILE *out, Temp_map m) {$/;"	f
Temp_empty	chap6/temp.c	/^Temp_map Temp_empty(void) {$/;"	f
Temp_enter	chap6/temp.c	/^void Temp_enter(Temp_map m, Temp_temp t, string s) {$/;"	f
Temp_label	chap6/temp.h	/^typedef S_symbol Temp_label;$/;"	t
Temp_labelList	chap6/temp.h	/^typedef struct Temp_labelList_ *Temp_labelList;$/;"	t	typeref:struct:Temp_labelList_
Temp_labelList_	chap6/temp.h	/^struct Temp_labelList_ { Temp_label head; Temp_labelList tail;};$/;"	s
Temp_labelstring	chap6/temp.c	/^string Temp_labelstring(Temp_label s)$/;"	f
Temp_layerMap	chap6/temp.c	/^Temp_map Temp_layerMap(Temp_map over, Temp_map under) {$/;"	f
Temp_look	chap6/temp.c	/^string Temp_look(Temp_map m, Temp_temp t) {$/;"	f
Temp_map	chap6/temp.h	/^typedef struct Temp_map_ *Temp_map;$/;"	t	typeref:struct:Temp_map_
Temp_map_	chap6/temp.c	/^struct Temp_map_ {TAB_table tab; Temp_map under;};$/;"	s	file:
Temp_name	chap6/temp.c	/^Temp_map Temp_name(void) {$/;"	f
Temp_namedlabel	chap6/temp.c	/^Temp_label Temp_namedlabel(string s)$/;"	f
Temp_newlabel	chap6/temp.c	/^Temp_label Temp_newlabel(void)$/;"	f
Temp_newtemp	chap6/temp.c	/^Temp_temp Temp_newtemp(void)$/;"	f
Temp_temp	chap6/temp.h	/^typedef struct Temp_temp_ *Temp_temp;$/;"	t	typeref:struct:Temp_temp_
Temp_tempList	chap6/temp.h	/^typedef struct Temp_tempList_ *Temp_tempList;$/;"	t	typeref:struct:Temp_tempList_
Temp_tempList_	chap6/temp.h	/^struct Temp_tempList_ { Temp_temp head; Temp_tempList tail;};$/;"	s
Temp_temp_	chap6/temp.c	/^struct Temp_temp_ {int num;};$/;"	s	file:
TyList_print	chap5/types.c	/^void TyList_print(Ty_tyList list)$/;"	f
Ty_Array	chap5/types.c	/^Ty_ty Ty_Array(Ty_ty ty)$/;"	f
Ty_Field	chap5/types.c	/^Ty_field Ty_Field(S_symbol name, Ty_ty ty)$/;"	f
Ty_FieldList	chap5/types.c	/^Ty_fieldList Ty_FieldList(Ty_field head, Ty_fieldList tail)$/;"	f
Ty_Int	chap5/types.c	/^Ty_ty Ty_Int(void) {return &tyint;}$/;"	f
Ty_Name	chap5/types.c	/^Ty_ty Ty_Name(S_symbol sym, Ty_ty ty)$/;"	f
Ty_Nil	chap5/types.c	/^Ty_ty Ty_Nil(void) {return &tynil;}$/;"	f
Ty_Record	chap5/types.c	/^Ty_ty Ty_Record(Ty_fieldList fields)$/;"	f
Ty_String	chap5/types.c	/^Ty_ty Ty_String(void) {return &tystring;}$/;"	f
Ty_TyList	chap5/types.c	/^Ty_tyList Ty_TyList(Ty_ty head, Ty_tyList tail)$/;"	f
Ty_Void	chap5/types.c	/^Ty_ty Ty_Void(void) {return &tyvoid;}$/;"	f
Ty_array	chap5/types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon34
Ty_field	chap5/types.h	/^typedef struct Ty_field_ *Ty_field;$/;"	t	typeref:struct:Ty_field_
Ty_fieldList	chap5/types.h	/^typedef struct Ty_fieldList_ *Ty_fieldList;$/;"	t	typeref:struct:Ty_fieldList_
Ty_fieldList_	chap5/types.h	/^struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};$/;"	s
Ty_field_	chap5/types.h	/^struct Ty_field_ {S_symbol name; Ty_ty ty;};$/;"	s
Ty_int	chap5/types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon34
Ty_name	chap5/types.h	/^		       Ty_name, Ty_void} kind;$/;"	e	enum:Ty_ty_::__anon34
Ty_nil	chap5/types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon34
Ty_print	chap5/types.c	/^void Ty_print(Ty_ty t)$/;"	f
Ty_record	chap5/types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon34
Ty_string	chap5/types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	e	enum:Ty_ty_::__anon34
Ty_ty	chap5/types.h	/^typedef struct Ty_ty_ *Ty_ty;$/;"	t	typeref:struct:Ty_ty_
Ty_tyList	chap5/types.h	/^typedef struct Ty_tyList_ *Ty_tyList;$/;"	t	typeref:struct:Ty_tyList_
Ty_tyList_	chap5/types.h	/^struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};$/;"	s
Ty_ty_	chap5/types.h	/^struct Ty_ty_ {enum {Ty_record, Ty_nil, Ty_int, Ty_string, Ty_array,$/;"	s
Ty_void	chap5/types.h	/^		       Ty_name, Ty_void} kind;$/;"	e	enum:Ty_ty_::__anon34
U	chap3/lex.yy.c	2;"	d	file:
U	chap4/lex.yy.c	2;"	d	file:
U_BoolList	chap1/util.c	/^U_boolList U_BoolList(bool head, U_boolList tail)$/;"	f
U_BoolList	chap2/util.c	/^U_boolList U_BoolList(bool head, U_boolList tail)$/;"	f
U_BoolList	chap3/util.c	/^U_boolList U_BoolList(bool head, U_boolList tail)$/;"	f
U_boolList	chap1/util.h	/^typedef struct U_boolList_ *U_boolList;$/;"	t	typeref:struct:U_boolList_
U_boolList	chap2/util.h	/^typedef struct U_boolList_ *U_boolList;$/;"	t	typeref:struct:U_boolList_
U_boolList	chap3/util.h	/^typedef struct U_boolList_ *U_boolList;$/;"	t	typeref:struct:U_boolList_
U_boolList_	chap1/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	s
U_boolList_	chap2/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	s
U_boolList_	chap3/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	s
VAR	chap2/tokens.h	49;"	d
WHILE	chap2/tokens.h	38;"	d
YYLERR	chap3/lex.yy.c	6;"	d	file:
YYLERR	chap4/lex.yy.c	3;"	d	file:
YYLMAX	chap3/lex.yy.c	9;"	d	file:
YYLMAX	chap4/lex.yy.c	6;"	d	file:
YYNEWLINE	chap3/lex.yy.c	76;"	d	file:
YYOPTIM	chap3/lex.yy.c	8;"	d	file:
YYOPTIM	chap4/lex.yy.c	5;"	d	file:
YYSTATE	chap3/lex.yy.c	7;"	d	file:
YYSTATE	chap4/lex.yy.c	4;"	d	file:
YYSTYPE	chap2/tokens.h	/^	} YYSTYPE;$/;"	t	typeref:union:__anon20
YYTYPE	chap3/lex.yy.c	751;"	d	file:
YYTYPE	chap4/lex.yy.c	726;"	d	file:
YYU	chap3/lex.yy.c	1073;"	d	file:
YYU	chap4/lex.yy.c	1048;"	d	file:
__STDC__	chap12/runtime.c	1;"	d	file:
adjust	chap3/lex.yy.c	/^void adjust(void)$/;"	f
adjust	chap4/lex.yy.c	/^void adjust(void)$/;"	f
advance	chap3/lex.yy.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	m	struct:yywork	file:
advance	chap4/lex.yy.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	m	struct:yywork	file:
allocRecord	chap12/runtime.c	/^int *allocRecord(int size)$/;"	f
anyErrors	chap2/errormsg.c	/^bool anyErrors= FALSE;$/;"	v
anyErrors	chap3/errormsg.c	/^bool anyErrors= FALSE;$/;"	v
append	chap3/lex.yy.c	/^static void append(char c)$/;"	f	file:
args	chap4/absyn.h	/^	      struct {S_symbol func; A_expList args;} call;$/;"	m	struct:A_exp_::__anon43::__anon44
args	chap7/tree.h	/^		     struct {T_exp fun; T_expList args;} CALL;$/;"	m	struct:T_exp_::__anon16::__anon19
array	chap4/absyn.h	/^		     S_symbol array;$/;"	m	union:A_ty_::__anon57
array	chap4/absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon52
array	chap5/types.h	/^		      Ty_ty array;$/;"	m	union:Ty_ty_::__anon35
assem	chap9/assem.h	/^		      struct {string assem; Temp_label label;} LABEL;$/;"	m	struct:AS_instr_::__anon3::__anon5
assem	chap9/assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	struct:AS_instr_::__anon3::__anon6
assem	chap9/assem.h	/^	       union {struct {string assem; Temp_tempList dst, src; $/;"	m	struct:AS_instr_::__anon3::__anon4
assign	chap1/slp.h	/^                    struct {string id; A_exp exp;} assign;$/;"	m	union:A_stm_::__anon23	typeref:struct:A_stm_::__anon23::__anon25
assign	chap4/absyn.h	/^	      struct {A_var var; A_exp exp;} assign;$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon47
bin_oper	chap7/printtree.c	/^static char bin_oper[][12] = {$/;"	v	file:
binder	chap4/table.c	/^typedef struct binder_ *binder;$/;"	t	typeref:struct:binder_	file:
binder_	chap4/table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	s	file:
block_env	chap8/canon.c	/^static S_table block_env;$/;"	v	file:
block_env	chap9/canon.c	/^static S_table block_env;$/;"	v	file:
body	chap4/absyn.h	/^		 S_symbol result; A_exp body;};$/;"	m	struct:A_fundec_
body	chap4/absyn.h	/^	      struct {A_decList decs; A_exp body;} let;$/;"	m	struct:A_exp_::__anon43::__anon51
body	chap4/absyn.h	/^	      struct {A_exp test, body;} whilee;$/;"	m	struct:A_exp_::__anon43::__anon49
body	chap4/absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon43::__anon50
body	chap9/assem.h	/^  AS_instrList body;$/;"	m	struct:AS_proc_
bool	chap1/util.h	/^typedef char bool;$/;"	t
bool	chap2/util.h	/^typedef char bool;$/;"	t
bool	chap3/util.h	/^typedef char bool;$/;"	t
call	chap4/absyn.h	/^	      struct {S_symbol func; A_expList args;} call;$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon44
cat	chap10/graph.c	/^static G_nodeList cat(G_nodeList a, G_nodeList b) {$/;"	f	file:
charPos	chap3/lex.yy.c	/^int charPos=1;$/;"	v
charPos	chap4/lex.yy.c	/^int charPos=1;$/;"	v
chars	chap12/runtime.c	/^struct string {int length; unsigned char chars[1];};$/;"	m	struct:string	file:
checked_malloc	chap1/util.c	/^void *checked_malloc(int len)$/;"	f
checked_malloc	chap2/util.c	/^void *checked_malloc(int len)$/;"	f
checked_malloc	chap3/util.c	/^void *checked_malloc(int len)$/;"	f
chr	chap12/runtime.c	/^struct string *chr(int i)$/;"	f
coloring	chap11/color.h	/^struct COL_result {Temp_map coloring; Temp_tempList spills;};$/;"	m	struct:COL_result
coloring	chap11/regalloc.h	/^struct RA_result {Temp_map coloring; AS_instrList il;};$/;"	m	struct:RA_result
comLevel	chap3/lex.yy.c	/^static int comLevel=0;$/;"	v	file:
commute	chap8/canon.c	/^static bool commute(T_stm x, T_exp y)$/;"	f	file:
commute	chap9/canon.c	/^static bool commute(T_stm x, T_exp y)$/;"	f	file:
compound	chap1/slp.h	/^             union {struct {A_stm stm1, stm2;} compound;$/;"	m	union:A_stm_::__anon23	typeref:struct:A_stm_::__anon23::__anon24
concat	chap12/runtime.c	/^struct string *concat(struct string *a, struct string *b)$/;"	f
consts	chap12/runtime.c	/^struct string consts[256];$/;"	v	typeref:struct:string
decs	chap4/absyn.h	/^	      struct {A_decList decs; A_exp body;} let;$/;"	m	struct:A_exp_::__anon43::__anon51
delete	chap10/graph.c	/^static G_nodeList delete(G_node a, G_nodeList l) {$/;"	f	file:
doProc	chap9/main.c	/^static void doProc(FILE *out, F_frame frame, T_stm body)$/;"	f	file:
do_exp	chap8/canon.c	/^static struct stmExp do_exp(T_exp exp)$/;"	f	file:
do_exp	chap9/canon.c	/^static struct stmExp do_exp(T_exp exp)$/;"	f	file:
do_stm	chap8/canon.c	/^static T_stm do_stm(T_stm stm)$/;"	f	file:
do_stm	chap9/canon.c	/^static T_stm do_stm(T_stm stm)$/;"	f	file:
dst	chap7/tree.h	/^		      struct {T_exp dst, src;} MOVE;$/;"	m	struct:T_stm_::__anon10::__anon14
dst	chap9/assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	struct:AS_instr_::__anon3::__anon6
dst	chap9/assem.h	/^	       union {struct {string assem; Temp_tempList dst, src; $/;"	m	struct:AS_instr_::__anon3::__anon4
e	chap8/canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	m	struct:stmExp	file:
e	chap9/canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	m	struct:stmExp	file:
elsee	chap4/absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	struct:A_exp_::__anon43::__anon48
empty	chap12/runtime.c	/^struct string empty={0,""};$/;"	v	typeref:struct:string
epilog	chap9/assem.h	/^  string epilog;$/;"	m	struct:AS_proc_
escape	chap4/absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon43::__anon50
escape	chap4/absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon54::__anon55
escape	chap4/absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	m	struct:A_field_
eseq	chap1/slp.h	/^                    struct {A_stm stm; A_exp exp;} eseq;$/;"	m	union:A_exp_::__anon28	typeref:struct:A_exp_::__anon28::__anon30
exp	chap1/slp.h	/^                    struct {A_stm stm; A_exp exp;} eseq;$/;"	m	struct:A_exp_::__anon28::__anon30
exp	chap1/slp.h	/^                    struct {string id; A_exp exp;} assign;$/;"	m	struct:A_stm_::__anon23::__anon25
exp	chap4/absyn.h	/^		       A_exp exp;} subscript;$/;"	m	struct:A_var_::__anon39::__anon41
exp	chap4/absyn.h	/^	      struct {A_var var; A_exp exp;} assign;$/;"	m	struct:A_exp_::__anon43::__anon47
exp	chap4/absyn.h	/^struct A_efield_ {S_symbol name; A_exp exp;};$/;"	m	struct:A_efield_
exp	chap7/tree.h	/^		      struct {T_exp exp; Temp_labelList jumps;} JUMP;$/;"	m	struct:T_stm_::__anon10::__anon12
exp	chap7/tree.h	/^		     struct {T_stm stm; T_exp exp;} ESEQ;$/;"	m	struct:T_exp_::__anon16::__anon18
expRefList	chap8/canon.c	/^typedef struct expRefList_ *expRefList;$/;"	t	typeref:struct:expRefList_	file:
expRefList	chap9/canon.c	/^typedef struct expRefList_ *expRefList;$/;"	t	typeref:struct:expRefList_	file:
expRefList_	chap8/canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	s	file:
expRefList_	chap9/canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	s	file:
exps	chap1/slp.h	/^                    struct {A_expList exps;} print;$/;"	m	struct:A_stm_::__anon23::__anon26
false	chap7/tree.h	/^			      Temp_label true, false;} CJUMP;$/;"	m	struct:T_stm_::__anon10::__anon13
field	chap4/absyn.h	/^		       S_symbol sym;} field;$/;"	m	union:A_var_::__anon39	typeref:struct:A_var_::__anon39::__anon40
fields	chap4/absyn.h	/^	      struct {S_symbol typ; A_efieldList fields;} record;$/;"	m	struct:A_exp_::__anon43::__anon46
fileName	chap2/errormsg.c	/^static string fileName = "";$/;"	v	file:
fileName	chap3/errormsg.c	/^static string fileName = "";$/;"	v	file:
flush	chap12/runtime.c	/^void flush()$/;"	f
format	chap9/assem.c	/^static void format(char *result, string assem, $/;"	f	file:
forr	chap4/absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon50
fun	chap7/tree.h	/^		     struct {T_exp fun; T_expList args;} CALL;$/;"	m	struct:T_exp_::__anon16::__anon19
func	chap4/absyn.h	/^	      struct {S_symbol func; A_expList args;} call;$/;"	m	struct:A_exp_::__anon43::__anon44
function	chap4/absyn.h	/^     union {A_fundecList function;$/;"	m	union:A_dec_::__anon54
getLast	chap8/canon.c	/^static T_stmList getLast(T_stmList list)$/;"	f	file:
getLast	chap9/canon.c	/^static T_stmList getLast(T_stmList list)$/;"	f	file:
getNext	chap8/canon.c	/^static T_stmList getNext()$/;"	f	file:
getNext	chap9/canon.c	/^static T_stmList getNext()$/;"	f	file:
get_call_rlist	chap8/canon.c	/^static expRefList get_call_rlist(T_exp exp)$/;"	f	file:
get_call_rlist	chap9/canon.c	/^static expRefList get_call_rlist(T_exp exp)$/;"	f	file:
getchar	chap12/runtime.c	/^struct string *getchar()$/;"	f
getchar	chap12/runtime.c	103;"	d	file:
getstring	chap3/lex.yy.c	/^static string getstring(void)$/;"	f	file:
global_block	chap8/canon.c	/^static struct C_block global_block;$/;"	v	typeref:struct:C_block	file:
global_block	chap9/canon.c	/^static struct C_block global_block;$/;"	v	typeref:struct:C_block	file:
hash	chap4/symbol.c	/^static unsigned int hash(char *s0)$/;"	f	file:
hashtable	chap4/symbol.c	/^static S_symbol hashtable[SIZE];$/;"	v	file:
head	chap1/slp.h	/^                   union {struct {A_exp head; A_expList tail;} pair;$/;"	m	struct:A_expList_::__anon32::__anon33
head	chap1/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	m	struct:U_boolList_
head	chap10/graph.h	/^struct G_nodeList_ { G_node head; G_nodeList tail;};$/;"	m	struct:G_nodeList_
head	chap2/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	m	struct:U_boolList_
head	chap3/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	m	struct:U_boolList_
head	chap4/absyn.h	/^struct A_decList_ {A_dec head; A_decList tail;};$/;"	m	struct:A_decList_
head	chap4/absyn.h	/^struct A_efieldList_ {A_efield head; A_efieldList tail;};$/;"	m	struct:A_efieldList_
head	chap4/absyn.h	/^struct A_expList_ {A_exp head; A_expList tail;};$/;"	m	struct:A_expList_
head	chap4/absyn.h	/^struct A_fieldList_ {A_field head; A_fieldList tail;};$/;"	m	struct:A_fieldList_
head	chap4/absyn.h	/^struct A_fundecList_ {A_fundec head; A_fundecList tail;};$/;"	m	struct:A_fundecList_
head	chap4/absyn.h	/^struct A_nametyList_ {A_namety head; A_nametyList tail;};$/;"	m	struct:A_nametyList_
head	chap5/types.h	/^struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};$/;"	m	struct:Ty_fieldList_
head	chap5/types.h	/^struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};$/;"	m	struct:Ty_tyList_
head	chap6/temp.h	/^struct Temp_labelList_ { Temp_label head; Temp_labelList tail;};$/;"	m	struct:Temp_labelList_
head	chap6/temp.h	/^struct Temp_tempList_ { Temp_temp head; Temp_tempList tail;};$/;"	m	struct:Temp_tempList_
head	chap7/tree.h	/^struct T_expList_ {T_exp head; T_expList tail;};$/;"	m	struct:T_expList_
head	chap7/tree.h	/^struct T_stmList_ {T_stm head; T_stmList tail;};$/;"	m	struct:T_stmList_
head	chap8/canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	m	struct:expRefList_	file:
head	chap8/canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	m	struct:C_stmListList_
head	chap9/assem.h	/^struct AS_instrList_ { AS_instr head; AS_instrList tail;};$/;"	m	struct:AS_instrList_
head	chap9/canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	m	struct:expRefList_	file:
head	chap9/canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	m	struct:C_stmListList_
hi	chap4/absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon43::__anon50
i	chap2/errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	m	struct:intList	file:
i	chap3/errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	m	struct:intList	file:
id	chap1/slp.h	/^                    struct {string id; A_exp exp;} assign;$/;"	m	struct:A_stm_::__anon23::__anon25
id	chap1/slp.h	/^             union {string id;$/;"	m	union:A_exp_::__anon28
iff	chap4/absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon48
il	chap11/regalloc.h	/^struct RA_result {Temp_map coloring; AS_instrList il;};$/;"	m	struct:RA_result
inDegree	chap10/graph.c	/^static int inDegree(G_node n)$/;"	f	file:
indent	chap4/prabsyn.c	/^static void indent(FILE *out, int d) {$/;"	f	file:
indent	chap7/printtree.c	/^static void indent(FILE *out, int d) {$/;"	f	file:
info	chap10/graph.c	/^  void *info;$/;"	m	struct:G_node_	file:
init	chap4/absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	struct:A_exp_::__anon43::__anon52
init	chap4/absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon54::__anon55
initArray	chap12/runtime.c	/^int *initArray(int size, int init)$/;"	f
input	chap3/lex.yy.c	11;"	d	file:
input	chap4/lex.yy.c	8;"	d	file:
intList	chap2/errormsg.c	/^static IntList intList(int i, IntList rest) $/;"	f	file:
intList	chap2/errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	s	file:
intList	chap3/errormsg.c	/^static IntList intList(int i, IntList rest) $/;"	f	file:
intList	chap3/errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	s	file:
intt	chap4/absyn.h	/^	      int intt;$/;"	m	union:A_exp_::__anon43
isNop	chap8/canon.c	/^static bool isNop(T_stm x) $/;"	f	file:
isNop	chap9/canon.c	/^static bool isNop(T_stm x) $/;"	f	file:
ival	chap2/tokens.h	/^	int ival;$/;"	m	union:__anon20
jumps	chap7/tree.h	/^		      struct {T_exp exp; Temp_labelList jumps;} JUMP;$/;"	m	struct:T_stm_::__anon10::__anon12
jumps	chap9/assem.h	/^			      AS_targets jumps;} OPER;$/;"	m	struct:AS_instr_::__anon3::__anon4
key	chap4/table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
kind	chap1/slp.h	/^struct A_expList_ {enum {A_pairExpList, A_lastExpList} kind;$/;"	m	struct:A_expList_	typeref:enum:A_expList_::__anon31
kind	chap1/slp.h	/^struct A_exp_ {enum {A_idExp, A_numExp, A_opExp, A_eseqExp} kind;$/;"	m	struct:A_exp_	typeref:enum:A_exp_::__anon27
kind	chap1/slp.h	/^struct A_stm_ {enum {A_compoundStm, A_assignStm, A_printStm} kind;$/;"	m	struct:A_stm_	typeref:enum:A_stm_::__anon22
kind	chap4/absyn.h	/^	       A_whileExp, A_forExp, A_breakExp, A_letExp, A_arrayExp} kind;$/;"	m	struct:A_exp_	typeref:enum:A_exp_::__anon42
kind	chap4/absyn.h	/^       {enum {A_simpleVar, A_fieldVar, A_subscriptVar} kind;$/;"	m	struct:A_var_	typeref:enum:A_var_::__anon38
kind	chap4/absyn.h	/^    {enum {A_functionDec, A_varDec, A_typeDec} kind;$/;"	m	struct:A_dec_	typeref:enum:A_dec_::__anon53
kind	chap4/absyn.h	/^struct A_ty_ {enum {A_nameTy, A_recordTy, A_arrayTy} kind;$/;"	m	struct:A_ty_	typeref:enum:A_ty_::__anon56
kind	chap5/types.h	/^		       Ty_name, Ty_void} kind;$/;"	m	struct:Ty_ty_	typeref:enum:Ty_ty_::__anon34
kind	chap7/tree.h	/^		       T_EXP} kind;$/;"	m	struct:T_stm_	typeref:enum:T_stm_::__anon9
kind	chap7/tree.h	/^		      T_CONST, T_CALL} kind;$/;"	m	struct:T_exp_	typeref:enum:T_exp_::__anon15
kind	chap9/assem.h	/^struct AS_instr_ { enum {I_OPER, I_LABEL, I_MOVE} kind;$/;"	m	struct:AS_instr_	typeref:enum:AS_instr_::__anon2
label	chap8/canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	m	struct:C_block
label	chap9/assem.h	/^		      struct {string assem; Temp_label label;} LABEL;$/;"	m	struct:AS_instr_::__anon3::__anon5
label	chap9/canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	m	struct:C_block
labels	chap6/temp.c	/^static int labels = 0;$/;"	v	file:
labels	chap9/assem.h	/^typedef struct {Temp_labelList labels;} *AS_targets;$/;"	m	struct:__anon1
last	chap1/slp.h	/^                          A_exp last;$/;"	m	union:A_expList_::__anon32
left	chap1/slp.h	/^                    struct {A_exp left; A_binop oper; A_exp right;} op;$/;"	m	struct:A_exp_::__anon28::__anon29
left	chap4/absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	struct:A_exp_::__anon43::__anon45
left	chap7/tree.h	/^		      struct {T_relOp op; T_exp left, right;$/;"	m	struct:T_stm_::__anon10::__anon13
left	chap7/tree.h	/^	       union {struct {T_stm left, right;} SEQ;$/;"	m	struct:T_stm_::__anon10::__anon11
left	chap7/tree.h	/^	      union {struct {T_binOp op; T_exp left, right;} BINOP;$/;"	m	struct:T_exp_::__anon16::__anon17
length	chap12/runtime.c	/^struct string {int length; unsigned char chars[1];};$/;"	m	struct:string	file:
let	chap4/absyn.h	/^	      struct {A_decList decs; A_exp body;} let;$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon51
lineNum	chap2/errormsg.c	/^static int lineNum = 1;$/;"	v	file:
lineNum	chap3/errormsg.c	/^static int lineNum = 1;$/;"	v	file:
linePos	chap2/errormsg.c	/^static IntList linePos=NULL;$/;"	v	file:
linePos	chap3/errormsg.c	/^static IntList linePos=NULL;$/;"	v	file:
linear	chap8/canon.c	/^static T_stmList linear(T_stm stm, T_stmList right)$/;"	f	file:
linear	chap9/canon.c	/^static T_stmList linear(T_stm stm, T_stmList right)$/;"	f	file:
lo	chap4/absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon43::__anon50
main	chap12/runtime.c	/^int main()$/;"	f
main	chap2/driver.c	/^int main(int argc, char **argv) {$/;"	f
main	chap3/parsetest.c	/^int main(int argc, char **argv) {$/;"	f
main	chap9/main.c	/^int main(int argc, string *argv)$/;"	f
marksym	chap4/symbol.c	/^static struct S_symbol_ marksym = {"<mark>",0};$/;"	v	typeref:struct:S_symbol_	file:
mkBlocks	chap8/canon.c	/^static C_stmListList mkBlocks(T_stmList stms, Temp_label done)$/;"	f	file:
mkBlocks	chap9/canon.c	/^static C_stmListList mkBlocks(T_stmList stms, Temp_label done)$/;"	f	file:
mksymbol	chap4/symbol.c	/^static S_symbol mksymbol(string name, S_symbol next)$/;"	f	file:
mygraph	chap10/graph.c	/^  G_graph mygraph;$/;"	m	struct:G_node_	file:
mykey	chap10/graph.c	/^  int mykey;$/;"	m	struct:G_node_	file:
mylast	chap10/graph.c	/^		 G_nodeList mynodes, mylast;$/;"	m	struct:G_graph_	file:
mynodes	chap10/graph.c	/^		 G_nodeList mynodes, mylast;$/;"	m	struct:G_graph_	file:
name	chap4/absyn.h	/^	      union {S_symbol name;$/;"	m	union:A_ty_::__anon57
name	chap4/absyn.h	/^                 S_symbol name; A_fieldList params; $/;"	m	struct:A_fundec_
name	chap4/absyn.h	/^struct A_efield_ {S_symbol name; A_exp exp;};$/;"	m	struct:A_efield_
name	chap4/absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	m	struct:A_field_
name	chap4/absyn.h	/^struct A_namety_ {S_symbol name; A_ty ty;};$/;"	m	struct:A_namety_
name	chap4/symbol.c	/^struct S_symbol_ {string name; S_symbol next;};$/;"	m	struct:S_symbol_	file:
name	chap5/types.h	/^		      struct {S_symbol sym; Ty_ty ty;} name;$/;"	m	union:Ty_ty_::__anon35	typeref:struct:Ty_ty_::__anon35::__anon36
name	chap5/types.h	/^struct Ty_field_ {S_symbol name; Ty_ty ty;};$/;"	m	struct:Ty_field_
newMap	chap6/temp.c	/^Temp_map newMap(TAB_table tab, Temp_map under) {$/;"	f
next	chap4/symbol.c	/^struct S_symbol_ {string name; S_symbol next;};$/;"	m	struct:S_symbol_	file:
next	chap4/table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
next	chap8/canon.c	/^static C_stmListList next(T_stmList prevstms, T_stmList stms, Temp_label done)$/;"	f	file:
next	chap9/canon.c	/^static C_stmListList next(T_stmList prevstms, T_stmList stms, Temp_label done)$/;"	f	file:
nodecount	chap10/graph.c	/^struct G_graph_ {int nodecount;$/;"	m	struct:G_graph_	file:
not	chap12/runtime.c	/^int not(int i)$/;"	f
nthLabel	chap9/assem.c	/^static Temp_label nthLabel(Temp_labelList list, int i) {$/;"	f	file:
nthTemp	chap9/assem.c	/^static Temp_temp nthTemp(Temp_tempList list, int i) {$/;"	f	file:
num	chap1/slp.h	/^                    int num;$/;"	m	union:A_exp_::__anon28
num	chap6/temp.c	/^struct Temp_temp_ {int num;};$/;"	m	struct:Temp_temp_	file:
op	chap1/slp.h	/^                    struct {A_exp left; A_binop oper; A_exp right;} op;$/;"	m	union:A_exp_::__anon28	typeref:struct:A_exp_::__anon28::__anon29
op	chap4/absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon45
op	chap7/tree.h	/^		      struct {T_relOp op; T_exp left, right;$/;"	m	struct:T_stm_::__anon10::__anon13
op	chap7/tree.h	/^	      union {struct {T_binOp op; T_exp left, right;} BINOP;$/;"	m	struct:T_exp_::__anon16::__anon17
oper	chap1/slp.h	/^                    struct {A_exp left; A_binop oper; A_exp right;} op;$/;"	m	struct:A_exp_::__anon28::__anon29
oper	chap4/absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	struct:A_exp_::__anon43::__anon45
ord	chap12/runtime.c	/^int ord(struct string *s)$/;"	f
outDegree	chap10/graph.c	/^static int outDegree(G_node n)$/;"	f	file:
outfile	chap6/temp.c	/^static FILE *outfile;$/;"	v	file:
output	chap3/lex.yy.c	10;"	d	file:
output	chap4/lex.yy.c	7;"	d	file:
pair	chap1/slp.h	/^                   union {struct {A_exp head; A_expList tail;} pair;$/;"	m	union:A_expList_::__anon32	typeref:struct:A_expList_::__anon32::__anon33
params	chap4/absyn.h	/^                 S_symbol name; A_fieldList params; $/;"	m	struct:A_fundec_
parse	chap3/parsetest.c	/^void parse(string fname) $/;"	f
parse	chap4/parse.c	/^A_exp parse(string fname) $/;"	f
pos	chap2/tokens.h	/^	int pos;$/;"	m	union:__anon20
pos	chap4/absyn.h	/^	      A_pos pos;$/;"	m	struct:A_ty_
pos	chap4/absyn.h	/^        A_pos pos;$/;"	m	struct:A_var_
pos	chap4/absyn.h	/^       A_pos pos;$/;"	m	struct:A_exp_
pos	chap4/absyn.h	/^     A_pos pos;$/;"	m	struct:A_dec_
pos	chap4/absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	m	struct:A_field_
pos	chap4/absyn.h	/^struct A_fundec_ {A_pos pos;$/;"	m	struct:A_fundec_
pr_dec	chap4/prabsyn.c	/^static void pr_dec(FILE *out, A_dec v, int d) {$/;"	f	file:
pr_decList	chap4/prabsyn.c	/^static void pr_decList(FILE *out, A_decList v, int d) {$/;"	f	file:
pr_efield	chap4/prabsyn.c	/^static void pr_efield(FILE *out, A_efield v, int d) {$/;"	f	file:
pr_efieldList	chap4/prabsyn.c	/^static void pr_efieldList(FILE *out, A_efieldList v, int d) {$/;"	f	file:
pr_exp	chap4/prabsyn.c	/^void pr_exp(FILE *out, A_exp v, int d) {$/;"	f
pr_expList	chap4/prabsyn.c	/^static void pr_expList(FILE *out, A_expList v, int d) {$/;"	f	file:
pr_field	chap4/prabsyn.c	/^static void pr_field(FILE *out, A_field v, int d) {$/;"	f	file:
pr_fieldList	chap4/prabsyn.c	/^static void pr_fieldList(FILE *out, A_fieldList v, int d) {$/;"	f	file:
pr_fundec	chap4/prabsyn.c	/^static void pr_fundec(FILE *out, A_fundec v, int d) {$/;"	f	file:
pr_fundecList	chap4/prabsyn.c	/^static void pr_fundecList(FILE *out, A_fundecList v, int d) {$/;"	f	file:
pr_namety	chap4/prabsyn.c	/^static void pr_namety(FILE *out, A_namety v, int d) {$/;"	f	file:
pr_nametyList	chap4/prabsyn.c	/^static void pr_nametyList(FILE *out, A_nametyList v, int d) {$/;"	f	file:
pr_oper	chap4/prabsyn.c	/^static void pr_oper(FILE *out, A_oper d) {$/;"	f	file:
pr_stm	chap7/printtree.c	/^static void pr_stm(FILE *out, T_stm stm, int d)$/;"	f	file:
pr_tree_exp	chap7/printtree.c	/^static void pr_tree_exp(FILE *out, T_exp exp, int d)$/;"	f	file:
pr_ty	chap4/prabsyn.c	/^static void pr_ty(FILE *out, A_ty v, int d) {$/;"	f	file:
pr_var	chap4/prabsyn.c	/^static void pr_var(FILE *out, A_var v, int d) {$/;"	f	file:
preds	chap10/graph.c	/^  G_nodeList preds;$/;"	m	struct:G_node_	file:
prevtop	chap4/table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
print	chap1/slp.h	/^                    struct {A_expList exps;} print;$/;"	m	union:A_stm_::__anon23	typeref:struct:A_stm_::__anon23::__anon26
print	chap12/runtime.c	/^void print(struct string *s)$/;"	f
printStmList	chap7/printtree.c	/^void printStmList (FILE *out, T_stmList stmList) $/;"	f
prog	chap1/prog1.c	/^A_stm prog(void) {$/;"	f
prolog	chap9/assem.h	/^  string prolog;$/;"	m	struct:AS_proc_
q1	chap4/lex.yy.c	/^char q1[1024+1];int q2=0;$/;"	v
q2	chap4/lex.yy.c	/^char q1[1024+1];int q2=0;$/;"	v
q3	chap4/lex.yy.c	/^static int q3=0;$/;"	v	file:
q4	chap4/lex.yy.c	/^static void q4(char c) { if (q2<1024) q1[q2++]= c; else$/;"	f	file:
q5	chap4/lex.yy.c	/^static string q5(void) {q1[q2]=0; q2=0; return String(q1); }$/;"	f	file:
record	chap4/absyn.h	/^		     A_fieldList record;$/;"	m	union:A_ty_::__anon57
record	chap4/absyn.h	/^	      struct {S_symbol typ; A_efieldList fields;} record;$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon46
record	chap5/types.h	/^	       union {Ty_fieldList record;$/;"	m	union:Ty_ty_::__anon35
rel_oper	chap7/printtree.c	/^static char rel_oper[][12] = {$/;"	v	file:
reorder	chap8/canon.c	/^static T_stm reorder(expRefList rlist) {$/;"	f	file:
reorder	chap9/canon.c	/^static T_stm reorder(expRefList rlist) {$/;"	f	file:
rest	chap2/errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	m	struct:intList	typeref:struct:intList::intList	file:
rest	chap3/errormsg.c	/^typedef struct intList {int i; struct intList *rest;} *IntList;$/;"	m	struct:intList	typeref:struct:intList::intList	file:
result	chap4/absyn.h	/^		 S_symbol result; A_exp body;};$/;"	m	struct:A_fundec_
right	chap1/slp.h	/^                    struct {A_exp left; A_binop oper; A_exp right;} op;$/;"	m	struct:A_exp_::__anon28::__anon29
right	chap4/absyn.h	/^	      struct {A_oper oper; A_exp left; A_exp right;} op;$/;"	m	struct:A_exp_::__anon43::__anon45
right	chap7/tree.h	/^		      struct {T_relOp op; T_exp left, right;$/;"	m	struct:T_stm_::__anon10::__anon13
right	chap7/tree.h	/^	       union {struct {T_stm left, right;} SEQ;$/;"	m	struct:T_stm_::__anon10::__anon11
right	chap7/tree.h	/^	      union {struct {T_binOp op; T_exp left, right;} BINOP;$/;"	m	struct:T_exp_::__anon16::__anon17
s	chap8/canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	m	struct:stmExp	file:
s	chap9/canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	m	struct:stmExp	file:
seq	chap4/absyn.h	/^	      A_expList seq;$/;"	m	union:A_exp_::__anon43
seq	chap8/canon.c	/^static T_stm seq(T_stm x, T_stm y)$/;"	f	file:
seq	chap9/canon.c	/^static T_stm seq(T_stm x, T_stm y)$/;"	f	file:
showit	chap6/temp.c	/^void showit(Temp_temp t, string r) {$/;"	f
simple	chap4/absyn.h	/^	union {S_symbol simple;$/;"	m	union:A_var_::__anon39
size	chap12/runtime.c	/^int size(struct string *s)$/;"	f
size	chap4/absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	struct:A_exp_::__anon43::__anon52
spills	chap11/color.h	/^struct COL_result {Temp_map coloring; Temp_tempList spills;};$/;"	m	struct:COL_result
src	chap7/tree.h	/^		      struct {T_exp dst, src;} MOVE;$/;"	m	struct:T_stm_::__anon10::__anon14
src	chap9/assem.h	/^		      struct {string assem; Temp_tempList dst, src;} MOVE;$/;"	m	struct:AS_instr_::__anon3::__anon6
src	chap9/assem.h	/^	       union {struct {string assem; Temp_tempList dst, src; $/;"	m	struct:AS_instr_::__anon3::__anon4
stm	chap1/slp.h	/^                    struct {A_stm stm; A_exp exp;} eseq;$/;"	m	struct:A_exp_::__anon28::__anon30
stm	chap7/tree.h	/^		     struct {T_stm stm; T_exp exp;} ESEQ;$/;"	m	struct:T_exp_::__anon16::__anon18
stm1	chap1/slp.h	/^             union {struct {A_stm stm1, stm2;} compound;$/;"	m	struct:A_stm_::__anon23::__anon24
stm2	chap1/slp.h	/^             union {struct {A_stm stm1, stm2;} compound;$/;"	m	struct:A_stm_::__anon23::__anon24
stmExp	chap8/canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	s	file:
stmExp	chap9/canon.c	/^struct stmExp {T_stm s; T_exp e;};$/;"	s	file:
stmLists	chap8/canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	m	struct:C_block
stmLists	chap9/canon.h	/^struct C_block { C_stmListList stmLists; Temp_label label;};$/;"	m	struct:C_block
str_oper	chap4/prabsyn.c	/^static char str_oper[][12] = {$/;"	v	file:
str_ty	chap5/types.c	/^static char str_ty[][12] = {$/;"	v	file:
streq	chap4/symbol.c	/^static int streq(string a, string b)$/;"	f	file:
string	chap1/util.h	/^typedef char *string;$/;"	t
string	chap12/runtime.c	/^struct string {int length; unsigned char chars[1];};$/;"	s	file:
string	chap2/util.h	/^typedef char *string;$/;"	t
string	chap3/util.h	/^typedef char *string;$/;"	t
stringEqual	chap12/runtime.c	/^int stringEqual(struct string *s, struct string *t)$/;"	f
stringbuild	chap3/lex.yy.c	/^char stringbuild[STRINGMAX+1];$/;"	v
stringg	chap4/absyn.h	/^	      string stringg;$/;"	m	union:A_exp_::__anon43
stringindex	chap3/lex.yy.c	/^int stringindex=0;$/;"	v
subscript	chap4/absyn.h	/^		       A_exp exp;} subscript;$/;"	m	union:A_var_::__anon39	typeref:struct:A_var_::__anon39::__anon41
substring	chap12/runtime.c	/^struct string *substring(struct string *s, int first, int n)$/;"	f
succs	chap10/graph.c	/^  G_nodeList succs;$/;"	m	struct:G_node_	file:
sval	chap2/tokens.h	/^	string sval;$/;"	m	union:__anon20
sym	chap4/absyn.h	/^		       S_symbol sym;} field;$/;"	m	struct:A_var_::__anon39::__anon40
sym	chap5/types.h	/^		      struct {S_symbol sym; Ty_ty ty;} name;$/;"	m	struct:Ty_ty_::__anon35::__anon36
tab	chap6/temp.c	/^struct Temp_map_ {TAB_table tab; Temp_map under;};$/;"	m	struct:Temp_map_	file:
table	chap4/table.c	/^  binder table[TABSIZE];$/;"	m	struct:TAB_table_	file:
tail	chap1/slp.h	/^                   union {struct {A_exp head; A_expList tail;} pair;$/;"	m	struct:A_expList_::__anon32::__anon33
tail	chap1/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	m	struct:U_boolList_
tail	chap10/graph.h	/^struct G_nodeList_ { G_node head; G_nodeList tail;};$/;"	m	struct:G_nodeList_
tail	chap2/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	m	struct:U_boolList_
tail	chap3/util.h	/^struct U_boolList_ {bool head; U_boolList tail;};$/;"	m	struct:U_boolList_
tail	chap4/absyn.h	/^struct A_decList_ {A_dec head; A_decList tail;};$/;"	m	struct:A_decList_
tail	chap4/absyn.h	/^struct A_efieldList_ {A_efield head; A_efieldList tail;};$/;"	m	struct:A_efieldList_
tail	chap4/absyn.h	/^struct A_expList_ {A_exp head; A_expList tail;};$/;"	m	struct:A_expList_
tail	chap4/absyn.h	/^struct A_fieldList_ {A_field head; A_fieldList tail;};$/;"	m	struct:A_fieldList_
tail	chap4/absyn.h	/^struct A_fundecList_ {A_fundec head; A_fundecList tail;};$/;"	m	struct:A_fundecList_
tail	chap4/absyn.h	/^struct A_nametyList_ {A_namety head; A_nametyList tail;};$/;"	m	struct:A_nametyList_
tail	chap5/types.h	/^struct Ty_fieldList_ {Ty_field head; Ty_fieldList tail;};$/;"	m	struct:Ty_fieldList_
tail	chap5/types.h	/^struct Ty_tyList_ {Ty_ty head; Ty_tyList tail;};$/;"	m	struct:Ty_tyList_
tail	chap6/temp.h	/^struct Temp_labelList_ { Temp_label head; Temp_labelList tail;};$/;"	m	struct:Temp_labelList_
tail	chap6/temp.h	/^struct Temp_tempList_ { Temp_temp head; Temp_tempList tail;};$/;"	m	struct:Temp_tempList_
tail	chap7/tree.h	/^struct T_expList_ {T_exp head; T_expList tail;};$/;"	m	struct:T_expList_
tail	chap7/tree.h	/^struct T_stmList_ {T_stm head; T_stmList tail;};$/;"	m	struct:T_stmList_
tail	chap8/canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	m	struct:expRefList_	file:
tail	chap8/canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	m	struct:C_stmListList_
tail	chap9/assem.h	/^struct AS_instrList_ { AS_instr head; AS_instrList tail;};$/;"	m	struct:AS_instrList_
tail	chap9/canon.c	/^struct expRefList_ {T_exp *head; expRefList tail;};$/;"	m	struct:expRefList_	file:
tail	chap9/canon.h	/^struct C_stmListList_ { T_stmList head; C_stmListList tail;};$/;"	m	struct:C_stmListList_
temps	chap6/temp.c	/^static int temps = 100;$/;"	v	file:
test	chap4/absyn.h	/^	      struct {A_exp test, body;} whilee;$/;"	m	struct:A_exp_::__anon43::__anon49
test	chap4/absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	struct:A_exp_::__anon43::__anon48
then	chap4/absyn.h	/^	      struct {A_exp test, then, elsee;} iff; \/* elsee is optional *\/$/;"	m	struct:A_exp_::__anon43::__anon48
tokname	chap2/driver.c	/^string tokname(tok) {$/;"	f
toknames	chap2/driver.c	/^string toknames[] = {$/;"	v
top	chap4/table.c	/^  void *top;$/;"	m	struct:TAB_table_	file:
trace	chap8/canon.c	/^static void trace(T_stmList list)$/;"	f	file:
trace	chap9/canon.c	/^static void trace(T_stmList list)$/;"	f	file:
true	chap7/tree.h	/^			      Temp_label true, false;} CJUMP;$/;"	m	struct:T_stm_::__anon10::__anon13
ty	chap4/absyn.h	/^struct A_namety_ {S_symbol name; A_ty ty;};$/;"	m	struct:A_namety_
ty	chap5/types.h	/^		      struct {S_symbol sym; Ty_ty ty;} name;$/;"	m	struct:Ty_ty_::__anon35::__anon36
ty	chap5/types.h	/^struct Ty_field_ {S_symbol name; Ty_ty ty;};$/;"	m	struct:Ty_field_
tyint	chap5/types.c	/^static struct Ty_ty_ tyint = {Ty_int};$/;"	v	typeref:struct:Ty_ty_	file:
tynil	chap5/types.c	/^static struct Ty_ty_ tynil = {Ty_nil};$/;"	v	typeref:struct:Ty_ty_	file:
typ	chap4/absyn.h	/^	      struct {S_symbol typ; A_efieldList fields;} record;$/;"	m	struct:A_exp_::__anon43::__anon46
typ	chap4/absyn.h	/^	      struct {S_symbol typ; A_exp size, init;} array;$/;"	m	struct:A_exp_::__anon43::__anon52
typ	chap4/absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon54::__anon55
typ	chap4/absyn.h	/^struct A_field_ {S_symbol name, typ; A_pos pos; bool escape;};$/;"	m	struct:A_field_
type	chap4/absyn.h	/^	    A_nametyList type;$/;"	m	union:A_dec_::__anon54
tystring	chap5/types.c	/^static struct Ty_ty_ tystring = {Ty_string};$/;"	v	typeref:struct:Ty_ty_	file:
tyvoid	chap5/types.c	/^static struct Ty_ty_ tyvoid = {Ty_void};$/;"	v	typeref:struct:Ty_ty_	file:
u	chap1/slp.h	/^                         } u;$/;"	m	struct:A_expList_	typeref:union:A_expList_::__anon32
u	chap1/slp.h	/^                   } u;$/;"	m	struct:A_exp_	typeref:union:A_exp_::__anon28
u	chap1/slp.h	/^                   } u;$/;"	m	struct:A_stm_	typeref:union:A_stm_::__anon23
u	chap4/absyn.h	/^		   } u;$/;"	m	struct:A_ty_	typeref:union:A_ty_::__anon57
u	chap4/absyn.h	/^	     } u;$/;"	m	struct:A_var_	typeref:union:A_var_::__anon39
u	chap4/absyn.h	/^	    } u;$/;"	m	struct:A_exp_	typeref:union:A_exp_::__anon43
u	chap4/absyn.h	/^	  } u;$/;"	m	struct:A_dec_	typeref:union:A_dec_::__anon54
u	chap5/types.h	/^		    } u;$/;"	m	struct:Ty_ty_	typeref:union:Ty_ty_::__anon35
u	chap7/tree.h	/^		    } u;$/;"	m	struct:T_stm_	typeref:union:T_stm_::__anon10
u	chap7/tree.h	/^		   } u;$/;"	m	struct:T_exp_	typeref:union:T_exp_::__anon16
u	chap9/assem.h	/^		    } u;$/;"	m	struct:AS_instr_	typeref:union:AS_instr_::__anon3
under	chap6/temp.c	/^struct Temp_map_ {TAB_table tab; Temp_map under;};$/;"	m	struct:Temp_map_	file:
unput	chap3/lex.yy.c	12;"	d	file:
unput	chap4/lex.yy.c	9;"	d	file:
value	chap4/table.c	/^struct binder_ {void *key; void *value; binder next; void *prevtop;};$/;"	m	struct:binder_	file:
var	chap4/absyn.h	/^	       struct {A_var var;$/;"	m	struct:A_var_::__anon39::__anon40
var	chap4/absyn.h	/^	       struct {A_var var;$/;"	m	struct:A_var_::__anon39::__anon41
var	chap4/absyn.h	/^	      struct {A_var var; A_exp exp;} assign;$/;"	m	struct:A_exp_::__anon43::__anon47
var	chap4/absyn.h	/^	      struct {S_symbol var; A_exp lo,hi,body; bool escape;} forr;$/;"	m	struct:A_exp_::__anon43::__anon50
var	chap4/absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	struct:A_dec_::__anon54::__anon55
var	chap4/absyn.h	/^	    struct {S_symbol var; S_symbol typ; A_exp init; bool escape;} var;$/;"	m	union:A_dec_::__anon54	typeref:struct:A_dec_::__anon54::__anon55
var	chap4/absyn.h	/^       union {A_var var;$/;"	m	union:A_exp_::__anon43
verify	chap3/lex.yy.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	m	struct:yywork	file:
verify	chap4/lex.yy.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	m	struct:yywork	file:
whilee	chap4/absyn.h	/^	      struct {A_exp test, body;} whilee;$/;"	m	union:A_exp_::__anon43	typeref:struct:A_exp_::__anon43::__anon49
yyback	chap3/lex.yy.c	/^yyback(p, m)$/;"	f
yyback	chap4/lex.yy.c	/^yyback(p, m)$/;"	f
yybgin	chap3/lex.yy.c	/^struct yysvf *yybgin = yysvec+1;$/;"	v	typeref:struct:yysvf
yybgin	chap4/lex.yy.c	/^struct yysvf *yybgin = yysvec+1;$/;"	v	typeref:struct:yysvf
yycrank	chap3/lex.yy.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	v	typeref:struct:yywork
yycrank	chap4/lex.yy.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	v	typeref:struct:yywork
yyestate	chap3/lex.yy.c	/^struct yysvf *yyestate;$/;"	v	typeref:struct:yysvf
yyestate	chap4/lex.yy.c	/^struct yysvf *yyestate;$/;"	v	typeref:struct:yysvf
yyextra	chap3/lex.yy.c	/^unsigned char yyextra[] = {$/;"	v
yyextra	chap4/lex.yy.c	/^unsigned char yyextra[] = {$/;"	v
yyfnd	chap3/lex.yy.c	/^int *yyfnd;$/;"	v
yyfnd	chap4/lex.yy.c	/^int *yyfnd;$/;"	v
yyin	chap3/lex.yy.c	/^FILE *yyin = {stdin}, *yyout = {stdout};$/;"	v
yyin	chap4/lex.yy.c	/^FILE *yyin = {stdin}, *yyout = {stdout};$/;"	v
yyinput	chap3/lex.yy.c	/^yyinput(){$/;"	f
yyinput	chap4/lex.yy.c	/^yyinput(){$/;"	f
yyleng	chap3/lex.yy.c	/^int yyleng; extern unsigned char yytext[];$/;"	v
yyleng	chap4/lex.yy.c	/^int yyleng; extern unsigned char yytext[];$/;"	v
yylex	chap3/lex.yy.c	/^yylex(){$/;"	f
yylex	chap4/lex.yy.c	/^yylex(){$/;"	f
yylineno	chap3/lex.yy.c	/^int yylineno =1;$/;"	v
yylineno	chap4/lex.yy.c	/^int yylineno =1;$/;"	v
yylook	chap3/lex.yy.c	/^yylook(){$/;"	f
yylook	chap4/lex.yy.c	/^yylook(){$/;"	f
yylsp	chap3/lex.yy.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:
yylsp	chap4/lex.yy.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:
yylstate	chap3/lex.yy.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:yysvf
yylstate	chap4/lex.yy.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:yysvf
yylval	chap2/driver.c	/^YYSTYPE yylval;$/;"	v
yymatch	chap3/lex.yy.c	/^unsigned char yymatch[] = {$/;"	v
yymatch	chap4/lex.yy.c	/^unsigned char yymatch[] = {$/;"	v
yymore	chap3/lex.yy.c	13;"	d	file:
yymorfg	chap3/lex.yy.c	/^int yymorfg;$/;"	v
yymorfg	chap4/lex.yy.c	/^int yymorfg;$/;"	v
yyolsp	chap3/lex.yy.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:
yyolsp	chap4/lex.yy.c	/^struct yysvf *yylstate [YYLMAX], **yylsp, **yyolsp;$/;"	v	typeref:struct:
yyother	chap3/lex.yy.c	/^	struct yysvf *yyother;$/;"	m	struct:yysvf	typeref:struct:yysvf::yysvf	file:
yyother	chap4/lex.yy.c	/^	struct yysvf *yyother;$/;"	m	struct:yysvf	typeref:struct:yysvf::yysvf	file:
yyout	chap3/lex.yy.c	/^FILE *yyin = {stdin}, *yyout = {stdout};$/;"	v
yyout	chap4/lex.yy.c	/^FILE *yyin = {stdin}, *yyout = {stdout};$/;"	v
yyoutput	chap3/lex.yy.c	/^yyoutput(c)$/;"	f
yyoutput	chap4/lex.yy.c	/^yyoutput(c)$/;"	f
yyprevious	chap3/lex.yy.c	/^int yyprevious = YYNEWLINE;$/;"	v
yyprevious	chap4/lex.yy.c	/^int yyprevious = 10;$/;"	v
yysbuf	chap3/lex.yy.c	/^unsigned char yysbuf[YYLMAX];$/;"	v
yysbuf	chap4/lex.yy.c	/^unsigned char yysbuf[YYLMAX];$/;"	v
yysptr	chap3/lex.yy.c	/^unsigned char *yysptr = yysbuf;$/;"	v
yysptr	chap4/lex.yy.c	/^unsigned char *yysptr = yysbuf;$/;"	v
yystoff	chap3/lex.yy.c	/^	struct yywork *yystoff;$/;"	m	struct:yysvf	typeref:struct:yysvf::yywork	file:
yystoff	chap4/lex.yy.c	/^	struct yywork *yystoff;$/;"	m	struct:yysvf	typeref:struct:yysvf::yywork	file:
yystops	chap3/lex.yy.c	/^	int *yystops;};$/;"	m	struct:yysvf	file:
yystops	chap4/lex.yy.c	/^	int *yystops;};$/;"	m	struct:yysvf	file:
yysvec	chap3/lex.yy.c	/^struct yysvf yysvec[] = {$/;"	v	typeref:struct:yysvf
yysvec	chap4/lex.yy.c	/^struct yysvf yysvec[] = {$/;"	v	typeref:struct:yysvf
yysvf	chap3/lex.yy.c	/^struct yysvf { $/;"	s	file:
yysvf	chap4/lex.yy.c	/^struct yysvf { $/;"	s	file:
yytchar	chap3/lex.yy.c	/^int yytchar;$/;"	v
yytchar	chap4/lex.yy.c	/^int yytchar;$/;"	v
yytext	chap3/lex.yy.c	/^unsigned char yytext[YYLMAX];$/;"	v
yytext	chap4/lex.yy.c	/^unsigned char yytext[YYLMAX];$/;"	v
yytop	chap3/lex.yy.c	/^struct yywork *yytop = yycrank+481;$/;"	v	typeref:struct:yywork
yytop	chap4/lex.yy.c	/^struct yywork *yytop = yycrank+482;$/;"	v	typeref:struct:yywork
yyunput	chap3/lex.yy.c	/^yyunput(c)$/;"	f
yyunput	chap4/lex.yy.c	/^yyunput(c)$/;"	f
yyvstop	chap3/lex.yy.c	/^int yyvstop[] = {$/;"	v
yyvstop	chap4/lex.yy.c	/^int yyvstop[] = {$/;"	v
yywork	chap3/lex.yy.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	s	file:
yywork	chap4/lex.yy.c	/^struct yywork { YYTYPE verify, advance; } yycrank[] = {$/;"	s	file:
yywrap	chap3/lex.yy.c	/^int yywrap(void)$/;"	f
yywrap	chap4/lex.yy.c	/^int yywrap(void)$/;"	f
